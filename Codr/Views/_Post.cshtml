@using Codr.Models.Posts
@using static Codr.Models.Posts.TextStyle
@model Post
    <div class="post" id="post-@Model.Id">
        @foreach (var component in Model.Components) {
            @switch (component) {
            case Heading h:
                <h1 class="content">@h.Content</h1>
                break;
            case Image image:
                string s = image.Url;
                @if (!Uri.IsWellFormedUriString(s, UriKind.Absolute))
                    s = "https://" + s;
                <img class="post-image" src="@s" />
                break;
            case Text text:
                <p>
                    @foreach (var textComponent in text.Components) {
                        <span class="content @( string.Format("{0}{1}{2}{3}{4}{5}",
                        textComponent.Style.HasStyle(Bold) ? "bold" : "",
                        textComponent.Style.HasStyle(Underlined) ? " underlined" : "",
                        textComponent.Style.HasStyle(Italics) ? " italics" : "",
                        textComponent.Style.HasStyle(Strikethrough) ? " strikethrough" : "",
                        textComponent.Style.HasStyle(InlineCode) ? " inline-code" : "",
                        textComponent.Style.HasStyle(Spoiler) ? " spoiler" : ""
                        ) )">@textComponent.Content</span>
                    }
                </p>
                break;
            case Link link:
                string s2 = link.Url;
                @if (!Uri.IsWellFormedUriString(s2, UriKind.Absolute))
                    s = "https://" + s2;
                <a class="content" href="@s2">@(string.IsNullOrEmpty(link.Content) ? link.Content : s2)</a>
                break;
            case Code code:
                <pre><code class=@(code.Language?.ToString().ToLower() ?? "plaintext")>@code.Content</code></pre>
                break;
            }
        }
        <p class="content">Posted on @Model.Created.ToString()</p>
    </div>